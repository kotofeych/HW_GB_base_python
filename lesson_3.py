# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
def division (*args):
    try:
        args1 = int(input("Input args1: "))
        args2 = int(input("Input args2: "))
        res = args1 / args2
    except BaseException:
        return ("ERROR. EXIT.")
        exit(-1)

    return int(res)

print(division())

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

name2 = str(input("Input name: "))
surname2 = str(input("Input surname: "))
year2 = str(input("Input year: "))
city2 = str(input("Input city: "))
email2 = str(input("Input email: "))
phone2 = str(input("Input phone: "))

def personal_info(name,surname,year,city,email,phone):
    return ' '.join([
        "name: ", name,
        ". surname: ", surname,
        ". year: ", year,
        ". city: ", city,
        ". email: ", email,
        ". phone: ", phone, "."
        ])

print(personal_info(name=name2, surname=surname2, year=year2, city=city2, email=email2, phone=phone2))



# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

def my_func(*args):
    args1 = int(input("args1: "))
    args2 = int(input("args2: "))
    args3 = int(input("args3: "))

    if args1 >= args2 > args3:
        return args1 + args2
    elif args3 >= args2 > args1:
        return args3 + args2
    elif args1 >= args3 > args1:
        return args1 + args3
    else:
        exit(-1)

print(my_func())


# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# ** Подсказка:** попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
def my_func(x,y):
    v1 = x ** y
    v2 = 1
    i = 1
    while i <= abs(y):
        v2 *= x
        i += 1

    return v1, 1 / v2

print(
    my_func(
        int(input("v1: ")),
        int(input("v2: "))
    )
)

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее
# сумме и после этого завершить программу.



# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().
# Важно!
# При отправке домашнего задания обязательно нажимайте галочку "Показать задание ментору".

def int_func (*args):
    word = input("Input word: ")
    print(word.title())
    return
int_func()
